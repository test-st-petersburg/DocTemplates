name: Build and test

on:
  push:
    paths:
      - ".github/workflows/build-and-test.yml"
      - "src/**"
      - "tools/**"
      - ".build.ps1"

  pull_request:
    paths:
      - ".github/workflows/build-and-test.yml"
      - "src/**"
      - "tools/**"
      - ".build.ps1"

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "11"
          check-latest: true

      - name: Install required PowerShell and NuGet modules
        shell: powershell
        run: |
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted;
          Install-Module -Name InvokeBuild -Verbose | Out-Null;
          Install-Module -Name 7Zip4Powershell -Verbose | Out-Null;
          Install-Module -Name PowerShellForGitHub -Verbose | Out-Null;
          Register-PackageSource -Name 'nuget.org' -Location 'https://api.nuget.org/v3/index.json' -ProviderName NuGet -Trusted -Force -Verbose | Out-Null;
          Install-Package -Name 'Saxon-HE' -MinimumVersion '9.8' -MaximumVersion '9.8.999' -ProviderName NuGet -Verbose | Out-Null;
          Install-Package -Name 'QRCoder' -ProviderName NuGet -SkipDependencies -Verbose | Out-Null;

      - name: Install ODFValidator
        shell: powershell
        run: |
          ./tests/Prepare-ODFValidator.ps1;

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.10
        with:
          useConfigFile: true

      - name: Build .ott and .odt files
        shell: powershell
        run: |
          Import-Module -Name InvokeBuild | Out-Null;
          Write-Information "Templates version: ${{ steps.gitversion.outputs.semVer }}" -InformationAction Continue;
          Invoke-Build -Task Build -Version '${{ steps.gitversion.outputs.semVer }}' -Verbose;

      - name: Validate .ott and .odt files
        shell: powershell
        run: |
          Import-Module -Name InvokeBuild | Out-Null;
          Invoke-Build -Task Test -Verbose;

      - name: Upload .ott files
        uses: actions/upload-artifact@v2
        with:
          name: doc-templates
          path: "${{ github.workspace }}/output/template/*.ott"
          if-no-files-found: warn

      - name: Upload .odt files
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: "${{ github.workspace }}/output/doc/*.odt"
          if-no-files-found: warn
